{
    "common": {
        "name":                     "hm-rega",
        "title":                    "HomeMatic ReGaHSS Adapter",
        "desc": {
            "en":                   "Connects HomeMatic CCU \"Logic Layer\" (\"ReGaHSS\") to ioBroker",
            "de":                   "Verbindet die Logikschicht einer HomeMatic CCU (\"ReGaHSS\") mit ioBroker"
        },
        "depends": [
            "hm-rpc"
        ],
        "version":                  "0.1.0",
        "authors": [
            "hobbyquaker <hq@ccu.io>"
        ],
        "mode":                     "daemon",
        "platform":                 "Javascript/Node.js",
        "loglevel":                 "info"
    },
    "native": {
        "ip":                       "172.16.23.3",
        "port":                     8181,
        "polling":                  true,
        "pollingInterval":          30,
        "pollingTrigger":           "BidCoS-RF:50.PRESS_SHORT",
        "rfdAdapter":               "hm-rpc.0",
        "hs485dAdapter":            true,
        "cuxdAdapter":              null,
        "syncVariables":            true,
        "syncPrograms":             true,
        "syncNames":                true,
        "syncRooms":                true,
        "enumRooms":                "enum.rooms",
        "syncFunctions":            true,
        "enumFunctions":            "enum.functions",
        "syncFavorites":            true,
        "enumFavorites":            "enum.favorites"
    },
    "objects": [
        {
            "_id": "_design/hm-rega",
            "language": "javascript",
            "views": {
                "variables": {
                    "map": "function(doc) {\n  if (doc._id.match(/^hm-rega\\.[0-9]+\\.[0-9]+/) && (doc.native.TypeName === 'ALARMDP' || doc.native.TypeName === 'VARDP')) {\n   emit(doc._id, doc);\n  }\n}"
                },
                "programs": {
                    "map": "function(doc) {\n  if (doc._id.match(/^hm-rega\\.[0-9]+\\.[0-9]+/) && (doc.native.TypeName === 'PROGRAM')) {\n   emit(doc._id, doc);\n  }\n}"
                }
            }
        },

    ]
}